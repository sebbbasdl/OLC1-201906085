package analizadores; 
import java_cup.runtime.*;
import Estructuras.Node;
//import Estructuras.Arbol;
import Estructuras.Production;
import Estructuras.Instructions.Declaracion;
import Estructuras.Instructions.Operacion;
import Estructuras.Instructions.Instruccion;

import java.util.LinkedList;

parser code 
{:
    /**
     * Variable en la que se almacena el arbol de sintaxis abstracta que se 
     * genera luego del analisis sintáctico.
     */
    public LinkedList<Instruccion> AST;
    
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
        
    public LinkedList<Instruccion> getAST() {
        return AST;
    }
:} 


terminal String T_INGRESAR;
terminal String T_ID;
terminal String T_COMO;
terminal String T_STRING;
terminal String T_INT;
terminal String T_CADENA;
terminal String T_CON_VALOR;
terminal String T_ENTERO;
terminal String T_CARACTER;
terminal String T_CHAR;
terminal String T_BOOLEAN;
terminal String T_VALOR_BOOL;
terminal String T_FLOAT;
terminal String T_INICIO;
terminal String T_FIN;
terminal String T_ASIG;
terminal String PTCOMA,PARIZQ,PARDER;
terminal String MAS,MENOS,POR,DIVIDIDO;
terminal String UMENOS;



non terminal ini;
non terminal Production instrucciones;
non terminal Production instruccion;
non terminal Production declaracion;
non terminal Production expresion;

precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS; 


start with ini; 

ini::=T_INICIO instrucciones:a T_FIN  {:
                                parser.AST=a.getInstructions();
                                Node NODERAIZ = new Node("INIT"); NODERAIZ.addSon(a.getNode());
                                
                        :}



;

instrucciones ::= 
   instrucciones:a instruccion:b    {:
                                        RESULT=new Production(new Node("Instrucciones"), a.getInstructions());
                                        RESULT.addIns(b.getIns());
                                        RESULT.addSon(a);
                                        RESULT.addSon(b);
                                    :}
 | instruccion :a       {:
                            RESULT=new Production(new Node("Instrucciones"), new LinkedList<>());
                            RESULT.addIns(a.getIns());
                            RESULT.addSon(a);
                        :}
 
; 

instruccion ::= 
    declaracion:a         {:
                            RESULT=a;

                        :}
    
;

declaracion ::=
    T_INGRESAR T_ID:a T_COMO T_STRING T_CON_VALOR T_CADENA:b PTCOMA    {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"string"));
                                                                RESULT.addSon("ingresar");
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("como");
                                                                RESULT.addSon("cadena");
                                                                RESULT.addSon("con_valor");
                                                                RESULT.addSon(b); 
                                                            :}

    |T_INGRESAR T_ID:a T_COMO T_INT T_CON_VALOR expresion:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,(Operacion)b.getIns(),"int"));
                                                                RESULT.addSon("ingresar");
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("como");
                                                                RESULT.addSon("numero");
                                                                RESULT.addSon("con_valor");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}

    |T_INGRESAR T_ID:a T_COMO T_CARACTER T_CON_VALOR T_CHAR:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"char"));
                                                                RESULT.addSon("ingresar");
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("como");
                                                                RESULT.addSon("caracter");
                                                                RESULT.addSon("con_valor");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}

    |T_INGRESAR T_ID:a T_COMO T_BOOLEAN T_CON_VALOR T_VALOR_BOOL:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"bool"));
                                                                RESULT.addSon("ingresar");
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("como");
                                                                RESULT.addSon("boolean");
                                                                RESULT.addSon("con_valor");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}
                                                           
    
                                                            
                                                           
    |T_ID:a T_ASIG T_CADENA:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"asig"));
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("->");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}

                                                            
                                                           
    |T_ID:a T_ASIG expresion:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,(Operacion)b.getIns(),"asig"));
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("->");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}

                                                            
                                                           
    |T_ID:a T_ASIG T_CHAR:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"asig"));
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("->");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}

                                                            
                                                           
    |T_ID:a T_ASIG T_VALOR_BOOL:b  PTCOMA   {: 
                                                                RESULT = new Production(new Node("Declaracion"),  new Declaracion(a,b,"asig"));
                                                                RESULT.addSon(a);
                                                                RESULT.addSon("->");
                                                                RESULT.addSon(b); 
                                                                RESULT.addSon(";");
                                                            :}
                                                           
                                                               
                                                                
;



expresion  ::= 
    MENOS expresion:a                           {:
                                                    RESULT=new Production(new Node("Expresion"), new Operacion((Operacion)a.getIns(),Operacion.Tipo_operacion.NEGATIVO));
                                                    RESULT.addSon("-");
                                                    RESULT.addSon(a);                                                
                                                :}%prec UMENOS     
 |  expresion:a MAS        expresion:b          {:
                                                    RESULT=new Production(new Node("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.SUMA));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("+");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a MENOS      expresion:b          {:
                                                    RESULT=new Production(new Node("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.RESTA));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("-");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a POR        expresion:b          {:
                                                    RESULT=new Production(new Node("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MULTIPLICACION));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("*");
                                                    RESULT.addSon(b);
                                                :}
 |  expresion:a DIVIDIDO   expresion:b          {:                                                
                                                    RESULT=new Production(new Node("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.DIVISION));
                                                    RESULT.addSon(a);
                                                    RESULT.addSon("/");
                                                    RESULT.addSon(b);
                                                :}
 |  T_ENTERO:a                                    {:
                                                    RESULT=new Production(new Node(null, a), new Operacion(a,Operacion.Tipo_operacion.NUMERO));
                                                :}
 |  T_FLOAT:a                                   {:
                                                    RESULT=new Production(new Node(null, a), new Operacion(a,Operacion.Tipo_operacion.NUMERO));
                                                :}
 |  PARIZQ expresion:a PARDER                   {:
                                                    RESULT=new Production(new Node("Expresion"), a.getIns());
                                                    RESULT.addSon("(");
                                                    RESULT.addSon(a);
                                                    RESULT.addSon(")");
                                                :}
;