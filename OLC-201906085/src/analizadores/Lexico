package analizadores;
import java_cup.runtime.Symbol; 

%% 
%class Lexico
%public 
%line 
%char 
%cup 
%unicode
%ignorecase

%init{ 
    yyline = 1; 
    yychar = 1; 
%init} 

BLANCOS=[ \r\t]+
D=[0-9]+
DD=[0-9]+("."[  |0-9]+)?
cadena="\"" [^\"]* "\""
id=[a-zA-ZñÑ][a-zA-Z0-9_ñÑ]*

%%

"ingresar"          {return new Symbol(sym.T_INGRESAR,yyline,yychar,yytext());}
{id}                {return new Symbol(sym.T_ID,yyline,yychar,yytext());}
"como"              {return new Symbol(sym.T_COMO,yyline,yychar, yytext());}
"string"            {return new Symbol(sym.T_STRING,yyline,yychar, yytext());}  
{cadena}            {return new Symbol(sym.T_CADENA,yyline,yychar,yytext());}
"con_valor"         {return new Symbol(sym.T_CON_VALOR,yyline,yychar, yytext());} 

";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 
"[" {return new Symbol(sym.CORIZQ,yyline,yychar, yytext());} 
"]" {return new Symbol(sym.CORDER,yyline,yychar, yytext());} 

"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVIDIDO,yyline,yychar, yytext());} 

\n {yychar=1;}

{BLANCOS} {} 
{D} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{DD} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 

. {
    System.out.println("Este es un error lexico: "+yytext()+
    ", en la linea: "+yyline+", en la columna: "+yychar);
}